
#include "display.h"
#include <util/delay.h>
#include <avr/interrupt.h>
#include <avr/io.h>
#include <avr/pgmspace.h>

#define miscr_logo_width 64
#define miscr_logo_height 64
const unsigned char miscr_logo_bits[] PROGMEM = {
   0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xfe,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xfc, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xc0, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xf0,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xe0, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xc0, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x80,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xc0, 0x00, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00,
   0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0xf8, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xc0, 0x00, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00,
   0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x20, 0xc0, 0xff, 0xff, 0xff,
   0xef, 0xff, 0xc0, 0x60, 0x80, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xc0, 0xe0,
   0x00, 0xff, 0xff, 0xff, 0x83, 0xff, 0xc0, 0xe0, 0x01, 0xfe, 0xff, 0xff,
   0x01, 0xff, 0xc0, 0xe0, 0x03, 0xfc, 0xff, 0xff, 0x01, 0xfe, 0xc0, 0xe0,
   0x07, 0xf8, 0xff, 0xff, 0x03, 0xfc, 0xc0, 0xe0, 0x0f, 0xf0, 0xff, 0xff,
   0x07, 0xf8, 0xc0, 0xe0, 0x1f, 0xe0, 0xff, 0xff, 0x0f, 0xf0, 0xc0, 0xe0,
   0x3f, 0xc0, 0xff, 0xff, 0x1f, 0xe0, 0xc0, 0x00, 0x00, 0x80, 0xff, 0xff,
   0x3f, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x80, 0xc0, 0x00,
   0x00, 0x00, 0xfe, 0xff, 0xff, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xfc, 0xff,
   0xff, 0x01, 0xc0, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0x03, 0xc0, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff,
   0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0xff, 0xff, 0x00, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xf8,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xf0, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0x00, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xc0,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x80, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01,
   0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xfc, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xc0, 0x07, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x0f,
   0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x1f, 0xe0, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xc0, 0x3f, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x7f,
   0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xfc, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff };

u8g_t u8g;

void Display::Init() {
  u8g_InitSPI(&u8g,&u8g_dev_st7920_128x64_sw_spi, PN(0, 1), PN(7, 0), PN(7, 1), U8G_PIN_NONE, U8G_PIN_NONE);
  CLKPR = 0x80;
  CLKPR = 0x00;

  // set compare match register to desired timer count:
  OCR1A = 15624;
  // turn on CTC mode:
  TCCR1B |= (1 << WGM12);
  // Set CS10 and CS12 bits for 1024 prescaler:
  TCCR1B |= (1 << CS10);
  TCCR1B |= (1 << CS12);
  // enable timer compare interrupt:
  TIMSK1 |= (1 << OCIE1A);
}

ISR(TIMER1_COMPA_vect) {
  u8g_FirstPage(&u8g);

  do {
    u8g_SetFont(&u8g, u8g_font_5x7);

    u8g_DrawXBMP(&u8g, 0, 0, miscr_logo_width, miscr_logo_height, miscr_logo_bits);
    u8g_DrawStr(&u8g, 65, 8, "miscr v0.2");
    u8g_DrawStr(&u8g, 65, 17, "mirpm module");
    u8g_DrawStr(&u8g, 65, 26, "\xa9 argarak");

    u8g_DrawBox(&u8g, 64, 32, 64, 32);
  } while(u8g_NextPage(&u8g));
}
